scenario Snake_s1
/* In this scenario i'm going to check if the board has been
 * set up correctly then I'm going to simulate a path where 
 * the snake eats an apple and then crashes into the right wall
 */
load Snake.asm

step
// check the starting board
/* (W = WALL, B = BODY, H, HEAD, A = APPLE)
 * W W W W W W    (1,1) (1,2) (1,3) (1,4) (1,5) (1,6)
 * W B H     W    (2,1)   B     H               (2,6)
 * W     A   W    (3,1)               A         (3,6)
 * W         W    (4,1)                         (4,6)
 * W         W    (5,1)                         (5,6)
 * W W W W W W    (6,1) (6,2) (6,3) (6,4) (6,5) (6,6) */
check board(1,1) = WALL;
check board(1,2) = WALL;
check board(1,3) = WALL;
check board(1,4) = WALL;
check board(1,5) = WALL;
check board(1,6) = WALL;
check board(2,1) = WALL;
check board(3,1) = WALL;
check board(4,1) = WALL;
check board(5,1) = WALL;
check board(6,1) = WALL;
check board(1,6) = WALL;
check board(2,6) = WALL;
check board(3,6) = WALL;
check board(4,6) = WALL;
check board(5,6) = WALL;
check board(6,2) = WALL;
check board(6,2) = WALL;
check board(6,3) = WALL;
check board(6,4) = WALL;
check board(6,5) = WALL;
check board(6,6) = WALL;
check board(2,2) = BODY;
check board(2,3) = HEAD;
check board(3,4) = APPLE;

set userChoice := RIGHT;
step
check status = IN_GAME;
// check if the body has moved
/* (W = WALL, B = BODY, H, HEAD, A = APPLE)
 * W W W W W W    (1,1) (1,2) (1,3) (1,4) (1,5) (1,6)
 * W B B H   W    (2,1)   B     B     H         (2,6)
 * W     A   W    (3,1)               A         (3,6)
 * W         W    (4,1)                         (4,6)
 * W         W    (5,1)                         (5,6)
 * W W W W W W    (6,1) (6,2) (6,3) (6,4) (6,5) (6,6) */
check board(2,3) = BODY;
check board(2,4) = HEAD;

set userChoice := DOWN;
step
check status = IN_GAME;
// check if the body has moved
/* (W = WALL, B = BODY, H, HEAD, A = APPLE)
 * W W W W W W    (1,1) (1,2) (1,3) (1,4) (1,5) (1,6)
 * W B B B   W    (2,1)   B     B     B         (2,6)
 * W     H   W    (3,1)               H         (3,6)
 * W   ?A    W    (4,1)        ?A               (4,6)
 * W         W    (5,1)                         (5,6)
 * W W W W W W    (6,1) (6,2) (6,3) (6,4) (6,5) (6,6) */
check board(2,4) = BODY;
check board(3,4) = HEAD;
// check if the apple has changed places
check not(applex = headx and appley = heady);
// check if the score has increased
check score = 1;

set userChoice := RIGHT;
step
check status = IN_GAME;
// check if the body has moved
/* (W = WALL, B = BODY, H, HEAD, A = APPLE)
 * W W W W W W    (1,1) (1,2) (1,3) (1,4) (1,5) (1,6)
 * W B B B   W    (2,1)   B     B     B         (2,6)
 * W     B H W    (3,1)               B     H   (3,6)
 * W   ?A    W    (4,1)         ?A              (4,6)
 * W         W    (5,1)                         (5,6)
 * W W W W W W    (6,1) (6,2) (6,3) (6,4) (6,5) (6,6) */
check board(3,4) = BODY;
check board(3,5) = HEAD;

set userChoice := RIGHT;
step
check status = GAME_OVER;
// check if the body has moved
/* (W = WALL, B = BODY, H, HEAD, A = APPLE)
 * W W W W W W    (1,1) (1,2) (1,3) (1,4) (1,5) (1,6)
 * W B B B   W    (2,1)   B     B     B         (2,6)
 * W     B H W    (3,1)               B     H     W
 * W   ?A    W    (4,1)         ?A              (4,6)
 * W         W    (5,1)                         (5,6)
 * W W W W W W    (6,1) (6,2) (6,3) (6,4) (6,5) (6,6) */
check board(3,4) = BODY;
check board(3,5) = HEAD;
check board(3,6) = WALL;

step
check status = GAME_OVER;
check score > 0;